-- Create Database
CREATE DATABASE student_db;
USE student_db;

-- Create Table: Department
CREATE TABLE Department (
    Dept_ID INT PRIMARY KEY,
    Dept_Name VARCHAR(50) UNIQUE
);

-- Create Table: Student
CREATE TABLE Student (
    Roll_No INT PRIMARY KEY,
    Name VARCHAR(50) NOT NULL,
    Gender CHAR(1),
    DOB DATE,
    Dept_ID INT,
    Email VARCHAR(50) UNIQUE,
    CONSTRAINT fk_dept FOREIGN KEY (Dept_ID) REFERENCES Department(Dept_ID)
);

-- Create Table: Subject
CREATE TABLE Subject (
    Sub_ID INT PRIMARY KEY,
    Sub_Name VARCHAR(50),
    Dept_ID INT,
    Credits INT CHECK (Credits > 0),
    FOREIGN KEY (Dept_ID) REFERENCES Department(Dept_ID)
);

-- Create Table: Marks
CREATE TABLE Marks (
    Roll_No INT,
    Sub_ID INT,
    Marks_Obtained INT CHECK (Marks_Obtained BETWEEN 0 AND 100),
    PRIMARY KEY (Roll_No, Sub_ID),
    FOREIGN KEY (Roll_No) REFERENCES Student(Roll_No),
    FOREIGN KEY (Sub_ID) REFERENCES Subject(Sub_ID)
);

-- Create a View: High scoring students (avg marks > 80)
CREATE VIEW High_Scorers AS
SELECT s.Roll_No, s.Name, AVG(m.Marks_Obtained) AS Avg_Marks
FROM Student s
JOIN Marks m ON s.Roll_No = m.Roll_No
GROUP BY s.Roll_No, s.Name
HAVING AVG(m.Marks_Obtained) > 80;

-- Create an Index for faster searching by Name
CREATE INDEX idx_student_name ON Student(Name);

-- Create a Sequence (for auto student roll number)
-- Note: For MySQL use AUTO_INCREMENT, for Oracle use SEQUENCE
-- Department Data
INSERT INTO Department VALUES (1, 'Computer Engineering');
INSERT INTO Department VALUES (2, 'AI & Data Science');

-- Student Data
INSERT INTO Student VALUES (101, 'Tanushri', 'F', '2004-08-15', 2, 'tanushri@example.com');
INSERT INTO Student VALUES (102, 'Rohan', 'M', '2003-12-20', 1, 'rohan@example.com');
INSERT INTO Student VALUES (103, 'Sneha', 'F', '2004-03-10', 2, 'sneha@example.com');

-- Subject Data
INSERT INTO Subject VALUES (1, 'DBMS', 2, 4);
INSERT INTO Subject VALUES (2, 'AI', 2, 3);
INSERT INTO Subject VALUES (3, 'OS', 1, 3);

-- Marks Data
INSERT INTO Marks VALUES (101, 1, 88);
INSERT INTO Marks VALUES (101, 2, 91);
INSERT INTO Marks VALUES (102, 3, 75);
INSERT INTO Marks VALUES (103, 1, 95);
INSERT INTO Marks VALUES (103, 2, 89);
SELECT * FROM Student;
SELECT * FROM High_Scorers;
SELECT Name FROM Student 
JOIN Department ON Student.Dept_ID = Department.Dept_ID
WHERE Dept_Name = 'AI & Data Science';
SELECT Sub_Name, Credits FROM Subject;
SELECT Dept_Name, COUNT(*) AS Total_Students
FROM Student s
JOIN Department d ON s.Dept_ID = d.Dept_ID
GROUP BY Dept_Name;
SELECT DISTINCT s.Name
FROM Student s
JOIN Marks m ON s.Roll_No = m.Roll_No
WHERE m.Marks_Obtained > 90;

UPDATE Marks 
SET Marks_Obtained = 85 
WHERE Roll_No = 102 AND Sub_ID = 3;

DELETE FROM Student WHERE Roll_No = 103;

SELECT Name FROM Student ORDER BY Name ASC;

SELECT Sub_ID, MAX(Marks_Obtained) AS Highest_Marks
FROM Marks
GROUP BY Sub_ID;
----------------//2//-----------------
make same tables
Department(Dept_ID, Dept_Name)

Student(Roll_No, Name, Gender, DOB, Dept_ID, Email)

Subject(Sub_ID, Sub_Name, Dept_ID, Credits)

Marks(Roll_No, Sub_ID, Marks_Obtained)


-- Department
INSERT INTO Department VALUES (1, 'Computer Engineering');
INSERT INTO Department VALUES (2, 'AI & Data Science');

-- Student
INSERT INTO Student VALUES (101, 'Tanushri', 'F', '2004-08-15', 2, 'tanushri@example.com');
INSERT INTO Student VALUES (102, 'Rohan', 'M', '2003-12-20', 1, 'rohan@example.com');
INSERT INTO Student VALUES (103, 'Sneha', 'F', '2004-03-10', 2, 'sneha@example.com');
INSERT INTO Student VALUES (104, 'Amit', 'M', '2004-05-25', 1, 'amit@example.com');

-- Subject
INSERT INTO Subject VALUES (1, 'DBMS', 2, 4);
INSERT INTO Subject VALUES (2, 'AI', 2, 3);
INSERT INTO Subject VALUES (3, 'OS', 1, 3);
INSERT INTO Subject VALUES (4, 'CN', 1, 3);

-- Marks
INSERT INTO Marks VALUES (101, 1, 88);
INSERT INTO Marks VALUES (101, 2, 91);
INSERT INTO Marks VALUES (102, 3, 75);
INSERT INTO Marks VALUES (103, 1, 95);
INSERT INTO Marks VALUES (103, 2, 89);
INSERT INTO Marks VALUES (104, 3, 80);
INSERT INTO Marks VALUES (104, 4, 70);


SELECT s.Name, sub.Sub_Name, m.Marks_Obtained
FROM Student s
INNER JOIN Marks m ON s.Roll_No = m.Roll_No
INNER JOIN Subject sub ON m.Sub_ID = sub.Sub_ID;


SELECT s.Name, m.Marks_Obtained
FROM Student s
LEFT JOIN Marks m ON s.Roll_No = m.Roll_No;

SELECT sub.Sub_Name, s.Name, m.Marks_Obtained
FROM Marks m
RIGHT JOIN Subject sub ON m.Sub_ID = sub.Sub_ID
RIGHT JOIN Student s ON m.Roll_No = s.Roll_No;


SELECT s.Name, sub.Sub_Name
FROM Student s
CROSS JOIN Subject sub;

B. Subqueries

SELECT Name
FROM Student
WHERE Roll_No IN (
    SELECT Roll_No FROM Marks
    WHERE Marks_Obtained > (SELECT AVG(Marks_Obtained) FROM Marks)
);

SELECT Dept_Name 
FROM Department
WHERE Dept_ID = (SELECT Dept_ID FROM Student WHERE Name = 'Tanushri');


SELECT Name 
FROM Student 
WHERE Dept_ID IN (
    SELECT Dept_ID FROM Subject WHERE Dept_ID = 2
);

views

CREATE VIEW Student_Marks_Summary AS
SELECT s.Roll_No, s.Name, AVG(m.Marks_Obtained) AS Avg_Marks
FROM Student s
JOIN Marks m ON s.Roll_No = m.Roll_No
GROUP BY s.Roll_No, s.Name;

SELECT * FROM Student_Marks_Summary;

CREATE VIEW Dept_Student_Count AS
SELECT d.Dept_Name, COUNT(s.Roll_No) AS Total_Students
FROM Department d
LEFT JOIN Student s ON d.Dept_ID = s.Dept_ID
GROUP BY d.Dept_Name;

